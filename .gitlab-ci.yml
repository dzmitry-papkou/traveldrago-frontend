stages:
  - build
  - test
  - deploy staging
  - deploy production

variables:
  NODE_IMAGE: node:21-alpine

cache:
  paths:
    - node_modules/

build:
  image: $NODE_IMAGE
  stage: build
  script:
    - npm ci
    - npm run lint
    - npm test
    - npm run build
    - echo "$APP_VERSION" > build/version.html
  artifacts:
    paths:
      - build/
    expire_in: 1 week

test:
  image: $NODE_IMAGE
  stage: test
  script:
    - npm install -g serve
    - serve -s build &
    - sleep 10
  dependencies:
    - build

.deploy:
  image:
    name: amazon/aws-cli:2.15.44
    entrypoint: ['']
  rules:
    - if: '$CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH'
  before_script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION

deploy_production:
  stage: deploy
  variables:
    APP_NAME: TravelDrago-Frontend
    APP_ENV_NAME: TravelDrago-Frontend-env
  environment:
    name: production
    url: https://www.traveldrago.com
  when: manual
  extends: .deploy
  script:
      - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
      - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
      - aws configure set default.region $AWS_DEFAULT_REGION
      - aws s3 cp build/ s3://www.traveldrago.com --recursive
      - aws elasticbeanstalk create-application-version --application-name $APP_NAME --version-label $CI_COMMIT_REF_SLUG --source-bundle S3Bucket="www.traveldrago.com",S3Key=build
      - aws elasticbeanstalk update-environment --application-name $APP_NAME --version-label $CI_COMMIT_REF_SLUG --environment-name $APP_ENV_NAME