variables:
  NODE_IMAGE: node:21-alpine
  DOCKER_IMAGE: docker:26.1.1-dind
  APP_NAME: traveldrago-web
  APP_ENV_NAME: Traveldrago-web-env
  APP_VERSION: ${CI_COMMIT_SHORT_SHA}_${CI_PIPELINE_IID}
  ECR_REPOSITORY_URI: 730335238619.dkr.ecr.eu-north-1.amazonaws.com/traveldrago-web
  AWS_DEFAULT_REGION: eu-north-1
  S3_BUCKET: www.traveldrago.com
  CLOUD_FRONT_DISTRIBUTION_ID: EU017TT31UHLN

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - deploy

build:
  image: $NODE_IMAGE
  stage: build
  script:
    - npm install
    - npm run lint
    - npm test
    - npm run build
    - echo $CI_COMMIT_SHORT_SHA > build/version.txt
  artifacts:
    paths:
      - build/
    expire_in: 1 week

test:
  image: $NODE_IMAGE
  stage: test
  script:
    - npm install -g serve
    - serve -s build &
    - sleep 10
  dependencies:
    - build

deploy:
  image: amazon/aws-cli:2.15.44
  stage: deploy
  script:
    - echo "Deploying to S3..."
    - aws s3 sync build/ s3://$S3_BUCKET --delete
    - echo "Invalidating CloudFront cache..."
    # - aws cloudfront create-invalidation --distribution-id $CLOUD_FRONT_DISTRIBUTION_ID --paths "/*"
  environment:
    name: production
    url: https://www.traveldrago.com
  when: manual
  only:
    - main