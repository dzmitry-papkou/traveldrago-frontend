variables:
  NODE_IMAGE: node:21-alpine
  DOCKER_IMAGE: docker:26.1.1-dind
  APP_NAME: traveldrago-web
  APP_ENV_NAME: Traveldrago-web-env
  APP_VERSION: ${CI_COMMIT_SHORT_SHA}_${CI_PIPELINE_IID}
  ECR_REPOSITORY_URI: 730335238619.dkr.ecr.eu-north-1.amazonaws.com/traveldrago-web
  AWS_DEFAULT_REGION: eu-north-1

cache:
  paths:
    - node_modules/

stages:
  - build
  - test
  - package
  - push
  - deploy

build:
  image: $NODE_IMAGE
  stage: build
  script:
    - npm install
    - npm run lint
    - npm test
    - npm run build
    - echo $APP_VERSION > build/version.html
  artifacts:
    paths:
      - build/
    expire_in: 1 week

test:
  image: $NODE_IMAGE
  stage: test
  script:
    - npm install -g serve
    - serve -s build &
    - sleep 10
  dependencies:
    - build

package:
  image: $DOCKER_IMAGE
  services:
    - $DOCKER_IMAGE
  stage: package
  script:
    - apk add --no-cache zip jq
    - jq '.Image.Name = "'$ECR_REPOSITORY_URI:$APP_VERSION'"' Dockerrun.aws.json > Dockerrun.aws.json.tmp && mv Dockerrun.aws.json.tmp Dockerrun.aws.json
    - zip -r deploy_package.zip build/ .platform/ .ebextensions/ Dockerrun.aws.json
  artifacts:
    paths:
      - deploy_package.zip
    expire_in: 1 week

push:
  image: $DOCKER_IMAGE
  services:
    - name: docker:dind
  stage: push
  before_script:
    - apk update
    - apk add --no-cache python3 py3-pip curl
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install awscli
    - aws --version
    - docker --version
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION
    - |
      echo "$(aws ecr get-login-password --region $AWS_DEFAULT_REGION)" | docker login --username AWS --password-stdin $ECR_REPOSITORY_URI
    - docker build -t $ECR_REPOSITORY_URI:$APP_VERSION --build-arg CI_REGISTRY_IMAGE=$CI_REGISTRY_IMAGE --build-arg APP_VERSION=$APP_VERSION .
    - docker push $ECR_REPOSITORY_URI:$APP_VERSION

deploy_production:
  image:
    name: amazon/aws-cli:2.15.44
    entrypoint: ['']
  stage: deploy
  environment:
    name: production
    url: https://www.traveldrago.com
  when: manual
  dependencies:
    - package
  script:
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set default.region $AWS_DEFAULT_REGION
    - aws --version
    - yum install -y gettext
    - echo "Deploying $APP_NAME version $APP_VERSION to $APP_ENV_NAME"
    - aws s3 cp deploy_package.zip s3://$EB_BUCKET_NAME/$APP_NAME-$APP_VERSION.zip
    - aws elasticbeanstalk create-application-version --application-name "$APP_NAME" --version-label $APP_VERSION --source-bundle S3Bucket=$EB_BUCKET_NAME,S3Key=$APP_NAME-$APP_VERSION.zip
    - aws elasticbeanstalk update-environment --application-name $APP_NAME --version-label $APP_VERSION --environment-name $APP_ENV_NAME
